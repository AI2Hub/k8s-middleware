apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: uat
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kafka
                operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - kafka
              topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        - name: harbor-secret
      containers:
        - name: kafka
          imagePullPolicy: Always
          image: 10.150.30.17:28080/ops/kafka:2.13-2.7.0
          resources:
            requests:
              memory: "1.5Gi"
              cpu: "0.5"
            limits:
              memory: "1.5Gi"
              cpu: "1"
          env:
            - name: PODNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ZOOKEEPER_CLUSTER
              value: "zk-0.zookeeper.uat.svc.retailcluster.local:2181,zk-1.zookeeper.uat.svc.retailcluster.local:2181,zk-2.zookeeper.uat.svc.retailcluster.local:2181"
            - name: PORT
              value: "9092"
            - name: HOSTIP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 9092
              hostPort: 9092
              name: kafka-port
          command:
            - sh
            - -c
            - "echo broker.id=`echo $PODNAME |cut -b 7` >> /opt/kafka/config/kafak-server.properties \
              && echo listeners=PLAINTEXT://${HOSTIP}:9092 >> /opt/kafka/config/kafak-server.properties \
              && echo advertised.listeners=PLAINTEXT://${HOSTIP}:9092 >> /opt/kafka/config/kafak-server.properties \
              && echo num.network.threads=3 >> /opt/kafka/config/kafak-server.properties \
              && echo num.io.threads=8 >> /opt/kafka/config/kafak-server.properties \
              && echo socket.send.buffer.bytes=102400 >> /opt/kafka/config/kafak-server.properties \
              && echo socket.receive.buffer.bytes=102400 >> /opt/kafka/config/kafak-server.properties \
              && echo socket.request.max.bytes=104857600 >> /opt/kafka/config/kafak-server.properties \
              && echo log.dirs=/data/kafka/${PODNAME} >> /opt/kafka/config/kafak-server.properties \
              && echo num.partitions=1 >> /opt/kafka/config/kafak-server.properties \
              && echo  num.recovery.threads.per.data.dir=1 >> /opt/kafka/config/kafak-server.properties \
              && echo offsets.topic.replication.factor=1 >> /opt/kafka/config/kafak-server.properties \
              && echo transaction.state.log.replication.factor=1 >> /opt/kafka/config/kafak-server.properties \
              && echo transaction.state.log.min.isr=1  >> /opt/kafka/config/kafak-server.properties \
              && echo log.retention.hours=168 >> /opt/kafka/config/kafak-server.properties \
              && echo log.segment.bytes=1073741824 >> /opt/kafka/config/kafak-server.properties \
              && echo log.retention.check.interval.ms=300000 >> /opt/kafka/config/kafak-server.properties \
              && echo zookeeper.connect=$ZOOKEEPER_CLUSTER >> /opt/kafka/config/kafak-server.properties \
              && echo zookeeper.connection.timeout.ms=18000 >> /opt/kafka/config/kafak-server.properties \
              && echo group.initial.rebalance.delay.ms=0 >> /opt/kafka/config/kafak-server.properties \
              && echo port=9092 >> /opt/kafka/config/kafak-server.properties \
              && echo advertised.host.name=${HOSTIP} >> /opt/kafka/config/kafak-server.properties \
              && echo  advertised.port=9092 >> /opt/kafka/config/kafak-server.properties \
              && /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kafak-server.properties"
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: kafka-logs
              mountPath: /opt/kafka/logs
            - name: kafka-data
              mountPath: /data/kafka/
      securityContext:
        runAsUser: 0
        fsGroup: 0
      volumes:
        - name: kafka-logs
          hostPath:
            path: /data/kafka-logs/logs

  volumeClaimTemplates:
  - metadata:
      name: kafka-data
      labels: 
        app: kafka
    spec:
      storageClassName: kafka-storage
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 30Gi        

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: uat
  labels:
    app: kafka
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092
      name: kafka-9092


apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "mongo"
                  operator: Exists     
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - mongo
              topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
      - name: harbor-secret
      hostNetwork: true
      containers:
      - image: 10.150.30.17:28080/ops/mongo:4.2
        imagePullPolicy: Always
        name: mongo
        command: ["/bin/sh","-c"]
        args: ["/etc/mongo/fix-permission.sh && docker-entrypoint.sh mongod --replSet=retailrs  --bind_ip=0.0.0.0 --auth --keyFile=/var/lib/keyFile"]
        resources:
          requests:
            memory: 2Gi
            cpu: 1
          limits:
            memory: 4Gi
            cpu: 2        
        ports:
        - containerPort: 27017
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: tks4iiiP7k
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
        - name: keyfile
          mountPath: /etc/mongo
      volumes:
      - name: mongo-data
        hostPath:
          path: /data/mongo/data
      - name: keyfile
        configMap:
          name: mongo-conf


---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  ports:
  - name: mongo
    port: 27017
    targetPort: 27017
  selector:
    app: mongo

apiVersion: apps/v1
kind: Deployment
metadata:
  name: guardian-server
  namespace: prod
spec:
  selector:
    matchLabels:
      app: guardian-server
  replicas: 1
  template:
    metadata:
      labels:
        app: guardian-server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - guardian-server
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "app"
                  operator: In
                  values: ["middleware"]
      imagePullSecrets:
      - name: harbor-secret
      containers:
      - image: bjccr.tencentcloudcr.com/retail_ops/guardian_server:latest
        imagePullPolicy: Always
        name: guardian-server
        volumeMounts:
          - name: guardian-server-conf-path
            mountPath: /root/server_conf/guardian_server_conf_path.yaml
            subPath: guardian_server_conf_path.yaml 
          - name: guardian-server-conf-prod
            mountPath: /root/server_conf/guardian_server_prod.yaml
            subPath: guardian_server_prod.yaml
          - name: k8s-config
            mountPath: /root/server_conf/k8s_config
            subPath: k8s_config
      volumes:
        - name: guardian-server-conf-path
          configMap:
            name: guardian-server-conf
            items:
            - key: guardian_server_conf_path.yaml
              path: guardian_server_conf_path.yaml
        - name: guardian-server-conf-prod
          configMap:
            name: guardian-server-conf
            items:
            - key: guardian_server_prod.yaml
              path: guardian_server_prod.yaml
        - name: k8s-config
          configMap:
            name: guardian-server-conf
            items:
            - key: k8s_config
              path: k8s_config        

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: guardian-server-conf
  namespace: prod

data:
  k8s_config: |
    apiVersion: v1
    clusters:
    - cluster:
        certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1Ea3dOekE0TkRnME1Wb1hEVE14TURrd05UQTRORGcwTVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSlFnCmxHbGVJUDVna2pIblp6UTQwalA4ejFtTElqWW9qMmhxR3YvT3Zpdi9PMFJtZkRDemMwaUJKb2s1aWVIQXhGVnkKL3FBQ2paR2hSaW44NFBrVHE5cURTaTY1cktEV1NONW5JVmZUOHErbWxpWjl5a3FqZjJzQjlXUjNHdEJtc213SApKL3NsbzlxVWNlNzdxQ3RST0JMbW8xQ0pSNTFUdjZUMVUvaHhneTFiYmdSbE1OczQ2VHBuMzZJRUdyS3VhbTRjCmdQNnBNUkQ0VXZGV3ZzRGNGb0VNaU5lQVowbUp1QndYNXF2U3BVWDR3K1IvL1RQSkpHR2p4V3hGSmxIckZPS20KYTlkWG1McHhFei9uZ3BZZGpxdnFhUDcvTnAwRENWVGhOVXlCNi9Fd3BqU1RWYXc2eUwwRGl1Rko2U0oyNVZ6ZQpiWStFUUNnTVNpaFJmdHB4aHVFQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0tVTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFESGcwL2lLYUt6c1ZmNFVvWFUwSlhERWNSdFYKSmJ0anF2U3FpaUFqU3NmeFJ2UlUrdHltZERndElHTFA3Tlh4SDBBUG5hTkkxWTB1LzkreC9abU9ETFJqVXQrTQpsbkVWMUFpdHI3Q2x5UjhxTjB4TEVHU25qRS9YR3dheXFWLys1dnNkWktxQjNiOXJWSkx2RkhBRFZ6Q3dOTE94CnRORWQ5Z29hOVBVS2VWUmJ5UDUyYTE4c1h6dGdZRzNpcDgyQmVRVFZNYVF5QXVIUWRTMTU0MWR5eFZIdmo3c0QKM1l6WUlCdEFMN3dVTzBpR2JuKzNqM1JxV3NXeGdsZ3N3WFFZeExYVjJQcWNkUEk0Vjc2ZjJDU3RJRGxyVjlCeQpyb1hwWkcvVWw0QjVkME84ek5pSnIyKzdHbGJoOE9TQk1JNkZtVHE4NGx2SlNNM3VUbnc1VUI3YnNuZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        server: https://cls-rs47o3g9.ccs.tencent-cloud.com
      name: cls-rs47o3g9
    contexts:
    - context:
        cluster: cls-rs47o3g9
        user: "100015395374"
      name: cls-rs47o3g9-100015395374-context-default
    current-context: cls-rs47o3g9-100015395374-context-default
    kind: Config
    preferences: {}
    users:
    - name: "100015395374"
      user:
        client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZTZ0F3SUJBZ0lJRzBUeEpZY2M3Nzh3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TVRBNU1EY3dPVEE1TWpKYUZ3MDBNVEE1TURjd09UQTVNakphTURZeApFakFRQmdOVkJBb1RDWFJyWlRwMWMyVnljekVnTUI0R0ExVUVBeE1YTVRBd01ERTFNemsxTXpjMExURTJNekV3Ck1EVTNOakl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzl0Ry9aWnlGejVOb3UKMU5JR0FyM0c3b0hvazFyanl6Zk1CWWFUeUsyL0RTaUJlbGQ4RkUzbFkxZldHaTdQcE5GbGJWT1J2NEc3NkkyNQptbmJQMXpRS0RtYmtKK3JXSElKK1ZPN2VkME9VcFl6QStKMk9YWjk0eG1lMjg5enZCMUNSRTgxRnF4ODhKdk1FCkVxdHFXR0g3VDRDMzVjVzVSQldVMkRUMGV1TmZIcVdObmpmRDh2cEpRdzRaaW9UWVBhV293eFVqQkpxVWt2cmEKR3dJWGw1b3dOK1RkZVdXUkRiS3dMcUVlcndjZW5mWUt4Nk5maTBrOVI2bFNKTURWSm1Vcnp4UVh0eUpXYnF0TQpHYytmNEVhWDFQVGcvck42cXlGTXdVQXorZHBLeXpHeE5PaVNXNEQ3d1ZSOHE0LzZvYzJjZ0RVRGI2d204RWs5ClFVNjd0cGcvQWdNQkFBR2pQekE5TUE0R0ExVWREd0VCL3dRRUF3SUNoREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFnWUlLd1lCQlFVSEF3RXdEQVlEVlIwVEFRSC9CQUl3QURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpDNXc5OFpkOWdUK0xqZ3ZTUXY2K2pTYkUvUjJJRldNYng1cUtSVUtGMVVJeEMxZlRFS3lCMlZHZ0pWbkNSWjNTCjh3RDBaTG5oV3gycU1Td2Y2RjVvQjErQm5nVXYvaSsvSkd0VEhsYUI1K1d2TVhXZTdkdHl5WnJVdGhnbDFyYjMKRjQ3akxyRmlvK0hvOE9XOFh5alpJVExXMVNmODdnSnVNa1hVN0M1SXcxNEtvUjU1ZnV0eENxNGNscTB3WjA2WQpkMkdDNUkzcFVpWjRNSUR5UkRrSm8vVnFCQ3FOZDZWL2dvMS8yeEVZdGpPOHI0UWdvblJGUDNraHpuNkFWQ2paCnY1R29xSXc3b0pjWjJYTnp4bXF1QUhIUDZvVHpqdUV1dExEdHlYcU1xV2x0TXpJRnZQWEltQ3Z2UVJRdlNHdFEKNkE1bU1KbVl6b3RKY3VlZXZGcW9JQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmJSdjJXY2hjK1RhTHRUU0JnSzl4dTZCNkpOYTQ4czN6QVdHazhpdHZ3MG9nWHBYCmZCUk41V05YMWhvdXo2VFJaVzFUa2IrQnUraU51WnAyejljMENnNW01Q2ZxMWh5Q2ZsVHUzbmREbEtXTXdQaWQKamwyZmVNWm50dlBjN3dkUWtSUE5SYXNmUENiekJCS3JhbGhoKzArQXQrWEZ1VVFWbE5nMDlIcmpYeDZsalo0Mwp3L0w2U1VNT0dZcUUyRDJscU1NVkl3U2FsSkw2MmhzQ0Y1ZWFNRGZrM1hsbGtRMnlzQzZoSHE4SEhwMzJDc2VqClg0dEpQVWVwVWlUQTFTWmxLODhVRjdjaVZtNnJUQm5QbitCR2w5VDA0UDZ6ZXFzaFRNRkFNL25hU3NzeHNUVG8Ka2x1QSs4RlVmS3VQK3FITm5JQTFBMitzSnZCSlBVRk91N2FZUHdJREFRQUJBb0lCQUNpemh1L2hGYWRVNlk3MApzRjhEeFkzaDdGTm5FakFma01nZ1EyQi94TzlodGxnWlZKM1ZpV1QyN0lpT000N3ZjTkhQSkFmNFM3QnlVNzRICnF3Z3F4d3FGVG9RVElHcHgwWG1qWldDcnUvOHZpY1I1VXV5Um43NTg2eEd3dnEwMko0NEk3cGpNL3pXYnNiWWsKLzB3Z3pGenNFTlRqNG9rK1YxY0pFRXVIOWpLWTlRdjJOSzVnUWNNV0xucDE2aW9IR2lZSkgxN2hsem1QVXRKVgplM2dIbDZpL0NRMVQzY054L0JUUHNGdVJkRVFFMkNqOHRidXhqelM4SEVtVGh3dEpxdE5uM1lvZHRpa2ZTUlJGCnMwUnVLZ3ljaUErUXpmc0NpU0FJNDdMbWtQeFIvZjB6Wm8wdUpNQmFnbWdBdWxCNkNHTHRjUS8zQ0R5eWFUd3AKcGl3M05na0NnWUVBMHpTcU02VkxQNU03WjFtRm41TEhMaWtIMCtsVGdjek5SNisrcTFKa1VjeFpyNUNSOXp0cQptaG84SloxR21SZUtZMEYrSGlyOUJTSk8vMS9GWjA5T3dwZjIyZHNUUjB4c2lXeG9hTlFmVHhGVkFsRzg0THF1ClNYNExmVmhjMUV4cjNrNDRrMmpCeDJJWHNkSU5TN2JhNERoNXJpVWZkdlk1WGpzbmhOSUNNNE1DZ1lFQTVmQmoKcWdZaDM1dnc4QTQxV1lDQVVEQll3RGIvZVM0eEFGazhrb2hWMDNHL01DMkVpRUUyMENWdmwvbkJiUGFMQmJDYQpDTGlMOUtXM2FXa3NLUVk5TUM5NmU5cGdLTVBqTFlRSElDY2JCbkRFM1ZqdWhPSjJEd1JkTEhvWVd3VC8rU2I5CkVNQWk3ZmlSV2p0dDdFVUNQd2RrLy96ejg4eENFaFk5TmxXYlg1VUNnWUVBeHJvNkg4ZzdDb0hkbGp3c3Q5NGkKM2pNck0yREsrMG9hS1lhYXNKY2czN3FZOU5IaUZpL28rVUVRTVJCUVdrSkZLMmwzWXFsdVU4TlpjMzdJdnBGbgorVCtGdkswZThhcGVRZHdvVGVLeDV2TFcrd3l2M1FDcWQycExJMURlWDcvY2kxc3NicjlWL2VZMWgxS3V3ZncyCjdGMFhXUjJEQXF0aGhXSEJxSDcySlVNQ2dZQmVRY0dKSkFSa3RuYjQ0TW9yeTBwT0ZOTjh6ODYvN1JoM0xSMXcKYitUR3pYenpFZVdmT1NSd0JMaVBFdm1nWWh3eEUrakFwRzN5dHEvTnpTZ21GUUdtTEFCSW53Y0dEdTZrYk5mQwo3V1RkcWdKNVBnaGdmcmlvaFVCd2lBaE4zMm5TeDVHN2VSZVlkMm1XRklDRjl1L3B5RzAxcG9xV0tPZjRwQmNwCm04UWFWUUtCZ0VXMTN2dHRGRmJVNDMwN1dRd1VYeExLTzhXSzlDY25mZWNZMzI5VUVlOUFDcm1sVlFZOFJqMTcKS2xybW91MzlmYVpmb2xQL3htWm5qclkyenZyQW9VY1d1RGpIWThBQU12TXV1ZC81WVZ5NzBqYTFSTjJQK1hBNApEZG1hcXJpYVpIZ0RXMzZZdXczdW1rakMvVVlvQURlV3MyTWp3cyt5dkJmMHY0L3NTZUZ3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

  guardian_server_conf_path.yaml: |
    conf_path:
      prod: ./server_conf/guardian_server_prod.yaml
    #test: ""

    # 自身的健康检查地址
    self_health_address: "127.0.0.1:7999"
    # 其它成员的健康检查地址
    target_health_address: []

    alarm_address: "guardian-alarm.prod.svc.cluster.local:8881"

  guardian_server_prod.yaml: |
    biz_conf:
    # 待处理的消息, 最大排队数[这部分数据在进程退出后会丢失]
      consumer_queue_num: 50
      kafka_consumer:
        # brokers 可以填入多个
        brokers: ["10.155.20.11:9092","10.155.20.14:9092","10.155.20.15:9092"]
        # consumer group
        group: "guardian"
        version: "2.7.0"
        topics: ["zipkin2", "file_logging", "server_monitor_topic", "bigdata_logging"]
      # "roundrobin", "sticky", "range"
        assignor: "range"
        oldest: false
      # 1或者0, 如果设置为0, offset的遗忘时间将以broker为准; 如果设置为1, offset遗忘时间为1秒
        offset_retention: 1
      check_service: [ "file_logging", "health_check", "zipkin", "bigdata_logging"]  #--------------------目前这个配置不生效, 默认即可

    agent_conf:
      agent_queue_num: 50
      agent_address: 
        - "http://10.150.20.4:8880"
        - "http://10.150.20.21:8880" 
        - "http://10.150.20.19:8880"
        - "http://10.150.20.45:8880"
        - "http://10.150.20.13:8880"
        - "http://10.150.20.6:8880"
        - "http://10.150.20.31:8880"
        - "http://10.150.20.35:8880"
        - "http://10.150.20.10:8880" 
        - "http://10.150.20.23:8880"
        - "http://10.150.20.7:8880"
        - "http://10.150.20.3:8880"
        - "http://10.150.20.9:8880" 
        - "http://10.150.20.12:8880"
        - "http://10.150.20.15:8880"
        - "http://10.150.20.11:8880"
        - "http://10.150.20.14:8880"
        - "http://10.150.20.17:8880"
        - "http://10.150.20.5:8880"
        - "http://10.150.10.4:8880" 
        - "http://10.150.10.7:8880"
        - "http://10.150.10.9:8880"
        - "http://10.150.10.16:8880"
      check_service: [ "/sysinfo" ]

    middleware_conf:
      queue_num: 50
      kafka:
        version: "2.7.0"
        brokers: ["10.155.20.11:9092","10.155.20.14:9092","10.155.20.15:9092"]
      redis:
        address: "10.155.50.11:6379"
        password: ""
        database: 0
      elasticsearch:
        address: "http://elasticsearch-log.prod.svc.retailcluster.local:9200"
        path: "/_cluster/health?pretty"
      rocketmq:
        address: "10.155.50.13:12581"
      nacos:
        namespace_id: "prod"
        group_name: "REGISTER"
        ip: ["10.155.20.4:8848","10.155.20.21:8848"]
        path: "/nacos"
        port: 8848
      mysql:
        username: "root"
        password: "dsC9dn1ApG5rWKIh"
        address: "10.155.40.11:3306"
        db_name: "mysql"
      mongodb:
        database_names: ["admin","config","local"]
        uri: "10.155.20.5:27017,10.155.20.16:27017,10.155.20.17:27017"
        user: "admin"
        password: "dFrYbr6ksV"
        
      nginx:
        address: "http://10.150.20.3/status/format/json"
      emqx:
        address: "http://10.155.20.10:8081/api/v4/stats"
        user: "admin"
        passwd: "public"
      k8s:
        namespace: "prod"
        kube_config_path: "./server_conf/k8s_config"
      kafka_producer:
        kafka_version: "2.7.0"
        kafka_ip_port: ["10.155.20.11:9092","10.155.20.14:9092","10.155.20.15:9092"]
        async: true
        topic: "guardian_middleware"

    task_conf: {}

    alarm_conf:
      # 多少条一起推送
      alarm_queue_num: 1               #-------------------目前这个配置不生效, 默认是1
      # 告警服务地址
      http_address: "guardian-alarm.prod.svc.retailcluster.local:8881"
      serve_wx_path: "/alarm/wx"       #--------------------目前这个配置不生效, 默认即可

      kafka_producer:
        kafka_version: "2.8.0"
        kafka_ip_port: ["10.155.20.11:9092","10.155.20.14:9092","10.155.20.15:9092"]
        async: true
        topic: "guardian_alarm"

      # 指标的报错边界
      check_point:
        biz:
          file_logging:
            exception: [ "com.xiaoshouyi.core.common.exception.BaseUnknownException" ]
            result_code: [ 110001, 500, 501 ]
          health_check:
            # thread个数
            thread_count:
              zipkin-server: 300
              product-service: 300
              pay-service: 300
              message-service: 300
              job-admin: 300
              order-service: 300
              business-api: 300
              basesku-service: 300
              miniapp-service: 300
              member-service: 300
              risk-api: 300
              promotion-service: 300
              account-service: 300
              data-exchange-service: 300
              basement-service: 300
              open-gateway: 300
              platform-config-service: 300
              ecommerce-service: 300
              order-makeup: 300
              common-service: 300
              job-client: 300
              search-service: 300
            # memory部分free/total, 单位是百分比
            memory_free_percent: 15
          zipkin:
            # 超时时间, 单位是秒
            duration: 10
            service_name:
              -
                name: opengateway
                api:
                  - address: /user/token/check
                    value: 1

        host:
          # mem_usage 主机内存使用率
          mem_usage: 0.95
          # mem_value 主机剩余内存量(MB)
          mem_value: 500
          # cpu_usage 主机CPU使用率
          cpu_usage: 0.85
          # net_io_sent_rate 主机网卡上行速率(Mb/s) 
          net_io_sent_rate: 800
          # net_io_recv_rate 主机网卡下行速率(Mb/s)
          net_io_recv_rate: 800
          # disk_usage 主机磁盘使用率
          disk_usage: 85
          # disk_value 主机剩余磁盘大小(GB)
          disk_value: 10
          #服务日志目录增长不能超过指定值(MB)
          service_directory_use: 100000
          # process (running, zombie, sleep) 总和不能超过定值
          process_num: 1000
          # connection (tcp4, tcp6, udp4, udp6 "established") 总和不能超过定值
          connection_num: 2000
          # load 系统负载
          load_1: 5
          load_5: 5
          load_15: 5

        middleware:
          redis_check:
            # redis连接数
            conn_num: 5000

          kafka_check:
            # 单个消费者组的延迟数
            lag_sum: 10000

          es_check:
            health_status: red

          rocketmq_check:
            lag_sum: 10000

          nacos_check:
            healthy: true
          
          mysql_check:
            qps: 1000
            current_thread_running: 500
            used_connections_percent: 95
            slow_query_duration: 5000
    
          mongodb_check:
            qps: 0
            current_thread_running: 500
            current_connections: 1000

          nginx_check:
            waiting: 10
            requests: 1000
            5xx: 10

          k8s_check:
            pod:
              # 百分比
              cpu_usage: 150
              mem_usage: 150
            node:
              cpu_usage: 150
              mem_usage: 150

apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-conf
  namespace: uat

data:
  logstash_logs.conf: |
    input {
        kafka {
            bootstrap_servers => "kafka.uat.svc.retailcluster.local:9092"
            topics => ["file_logging"]
            consumer_threads => 8
            codec => json {
                charset => "UTF-8"
            }
            client_id => "logstash-logging"
            type => "filelogging"
        }
        kafka {
            bootstrap_servers => "kafka.uat.svc.retailcluster.local:9092"
            topics => ["middleware_monitor"]
            consumer_threads => 4
            client_id => "logstash-monitor"
            codec => json {
                charset => "UTF-8"
            }
            type => "monitor"
        }
        kafka {
            bootstrap_servers => "kafka.uat.svc.retailcluster.local:9092"
            topics => ["server_health_topic"]
            consumer_threads => 4
            codec => json
            client_id => "logstash-services"
            type => "services"
        }
        
        kafka {
            bootstrap_servers => "kafka.uat.svc.retailcluster.local:9092"
            topics => ["hosts_monitor"]
            consumer_threads => 4
            codec => json
            client_id => "logstash-hosts-monitor"
            type => "hosts-monitor"
        }
        
        kafka {
            bootstrap_servers => "kafka.uat.svc.retailcluster.local:9092"
            topics => ["guardian_middleware"]
            consumer_threads => 4
            codec => json
            client_id => "logstash-middleware-monitor"
            type => "middleware-monitor"
        }
    }

    filter {
        if[type] == "filelogging"{
        mutate{
            split => {"source" => "/"}
        }

        mutate{
            add_field => {
            "service" => "%{[source][3]}"
            "is_nginx" => "%{[source][4]}"
            "level" => "%{[source][5]}"
            }
        }
        mutate{
        remove_field => ["beat", "source", "offset", "prospector", "input", "@metadata"]
        }
        }
    }

    output {
        if [type] == "hosts-monitor" {
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "hosts-monitor-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        
        if [type] == "middleware-monitor" {
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "middleware-monitor-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[type] == "monitor"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "monitor-%{+YYYY.MM.dd}"
                timeout => 300
            }
        } else if[type] == "services"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "server-health-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[type] == "filelogging"{
        if[level] == "error.log"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "error-logging-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[level] == "response.log"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "response-logging-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[level] == "request.log"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "request-logging-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[level] == "common.log"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "common-logging-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[level] == "transaction_command.log"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "transaction-logging-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[level] == "transaction_handler.log"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "transaction-logging-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[level] == "rocketmq_publish.log"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "rocketmq-logging-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[level] == "rocketmq_subcrible.log"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "rocketmq-logging-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[level] == "access.log"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "nginx-logging-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        if[level] == "mqtt.log"{
            elasticsearch{
                hosts => ['elasticsearch-log.uat.svc.retailcluster.local:9200']
                index => "mqtt-logging-%{+YYYY.MM.dd}"
                timeout => 300
            }
        }
        }
    }


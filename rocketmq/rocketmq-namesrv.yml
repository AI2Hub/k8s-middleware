apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rocketmq-ns
  namespace: prod
  labels:
    app: rocketmq-ns

spec:
  serviceName: rocketmq-ns
  replicas: 2
  selector:
    matchLabels:
      app: rocketmq-ns
  template:
    metadata:
      labels:
        app: rocketmq-ns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - rocketmq-ns
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "rocketmq"
                  operator: Exists
      imagePullSecrets:
      - name: harbor-secret
      containers:
        - name: rocketmq-ns
          image: 10.150.30.17:28080/ops/rocketmq:4.8.0
          imagePullPolicy: Always
  
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 0.2
              memory: 1Gi
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: JAVA_OPT
              value: -Duser.home=/home/rocketmq
            - name: JAVA_OPT_EXT
              value:  -Xmn256m
          command: ["sh","-c","mqnamesrv"]
          ports:
            - containerPort: 9876
              
---
apiVersion: v1
kind: Service
metadata:
  name: rocketmq-ns
  namespace: prod
  labels:
    app: rocketmq-ns
spec:
  selector:
    app: rocketmq-ns
  clusterIP: None
  ports:
    - protocol: TCP
      port: 9876
      targetPort: 9876
      name: rocketmq-ns